# Generated by Django 5.2.6 on 2025-09-24 20:16

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('properties', '0002_property_address'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Notice headline or subject', max_length=200)),
                ('message', models.TextField(help_text='Full notice content')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('audience_type', models.CharField(choices=[('all_tenants', 'All Tenants'), ('property', 'Specific Property'), ('unit', 'Specific Unit'), ('individual', 'Individual Tenant'), ('caretakers', 'All Caretakers'), ('custom', 'Custom Selection')], default='all_tenants', max_length=20)),
                ('is_published', models.BooleanField(default=True)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now, help_text='When this notice should become visible')),
                ('expiry_date', models.DateTimeField(blank=True, help_text='When this notice should stop being visible', null=True)),
                ('requires_acknowledgment', models.BooleanField(default=False, help_text='Whether recipients must mark this as read')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(limit_choices_to={'role__in': ['landlord', 'caretaker']}, on_delete=django.db.models.deletion.PROTECT, related_name='created_notices', to=settings.AUTH_USER_MODEL)),
                ('custom_recipients', models.ManyToManyField(blank=True, help_text="If audience_type is 'custom'", related_name='custom_notices', to=settings.AUTH_USER_MODEL)),
                ('target_property', models.ForeignKey(blank=True, help_text="If audience_type is 'property'", null=True, on_delete=django.db.models.deletion.CASCADE, to='properties.property')),
                ('target_unit', models.ForeignKey(blank=True, help_text="If audience_type is 'unit'", null=True, on_delete=django.db.models.deletion.CASCADE, to='properties.unit')),
                ('target_user', models.ForeignKey(blank=True, help_text="If audience_type is 'individual'", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='targeted_notices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-priority', '-publish_date'],
            },
        ),
        migrations.CreateModel(
            name='NoticeAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='Attached file (PDF, image, document)', upload_to='notice_attachments/%Y/%m/')),
                ('filename', models.CharField(help_text='Original filename', max_length=255)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('content_type', models.CharField(help_text='MIME type of the file', max_length=100)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('notice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='notices.notice')),
            ],
            options={
                'ordering': ['filename'],
            },
        ),
        migrations.CreateModel(
            name='NoticeReadStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_statuses', to='notices.notice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notice_read_statuses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='notice',
            index=models.Index(fields=['audience_type', 'is_published'], name='notices_not_audienc_67fe8c_idx'),
        ),
        migrations.AddIndex(
            model_name='notice',
            index=models.Index(fields=['publish_date', 'expiry_date'], name='notices_not_publish_1bb5a6_idx'),
        ),
        migrations.AddIndex(
            model_name='notice',
            index=models.Index(fields=['priority', '-publish_date'], name='notices_not_priorit_6638c0_idx'),
        ),
        migrations.AddIndex(
            model_name='noticereadstatus',
            index=models.Index(fields=['user', 'is_read'], name='notices_not_user_id_1ee6d9_idx'),
        ),
        migrations.AddIndex(
            model_name='noticereadstatus',
            index=models.Index(fields=['notice', 'is_read'], name='notices_not_notice__971c3d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='noticereadstatus',
            unique_together={('notice', 'user')},
        ),
    ]
